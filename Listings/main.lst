


ARM Macro Assembler    Page 1 


    1 00000000         ;Se renombran los registros que se  van a utilizar para 
                       los inputs
    2 00000000         
    3 00000000        0 
                       H       RN               R0
    4 00000000        1 
                       V       RN               R1
    5 00000000         
    6 00000000         ;Se renombran los registros que se van a utilizar como v
                       ariables
    7 00000000         
    8 00000000        2 
                       CONT1   RN               R2
    9 00000000        3 
                       RELOJOUT
                               RN               R3
   10 00000000        4 
                       AMARILLO
                               RN               R4
   11 00000000        5 
                       FLUJOHORIZONTAL
                               RN               R5
   12 00000000         
   13 00000000         ;Se asignan etiquetas para las constantes de 0 y 1 que s
                       e usaran para mostrar el valor de los outputs
   14 00000000         
   15 00000000 00000001 
                       TRUE    EQU              1
   16 00000000 00000000 
                       FALSE   EQU              0
   17 00000000         
   18 00000000         ;Se asignan etiquetas para los espacios de memoria RAM d
                       onde se almacenaran los ouputs
   19 00000000         ;La memoria RAM comienza en la dirección 0x20000000
   20 00000000         ;Notaciones: S = Semaforo, P = Peatonal, H = Horizontal,
                        V (al inicio) = Vertical, A = Amarillo, R = Rojo, V (al
                        final) = Verde
   21 00000000         ;Cada dirección de memoria apunta a un bloque de 4 bytes
                        de tamaño
   22 00000000         
   23 00000000 20000000 
                       SHV     EQU              0x20000000
   24 00000000 20000004 
                       SHA     EQU              0x20000004
   25 00000000 20000008 
                       SHR     EQU              0x20000008
   26 00000000 2000000C 
                       SPHV    EQU              0x2000000C
   27 00000000 20000010 
                       SPHR    EQU              0x20000010
   28 00000000 20000014 
                       SVV     EQU              0x20000014
   29 00000000 20000018 
                       SVA     EQU              0x20000018
   30 00000000 2000001C 
                       SVR     EQU              0x2000001C
   31 00000000 20000020 
                       SPVV    EQU              0x20000020
   32 00000000 20000024 



ARM Macro Assembler    Page 2 


                       SPVR    EQU              0x20000024
   33 00000000         
   34 00000000         
   35 00000000         ;Código del programa principal
   36 00000000         
   37 00000000         
   38 00000000                 AREA             Main, CODE, READONLY
   39 00000000                 ENTRY
   40 00000000                 EXPORT           __main
   41 00000000         
   42 00000000         __main
   43 00000000         
   44 00000000 F000 F805       BL               CI          ; Branch de la subr
                                                            utina CI = Condicio
                                                            nes iniciales
   45 00000004 F000 F83C 
                       INF     BL               CRO         ; Branch de la subr
                                                            utina CRO = Cambio 
                                                            del Reloj Out
   46 00000008 F000 F850       BL               IRO         ; Branch de la subr
                                                            utina IRO = IF Relo
                                                            j Out
   47 0000000C E7FA            B                INF         ; Branch que genera
                                                             un loop infinito
   48 0000000E         
   49 0000000E         ;Subrutina que se encarga de establecer los valores inic
                       iales antes del ciclo principal
   50 0000000E         
   51 0000000E F04F 0000 
                       CI      MOV              H,#FALSE
   52 00000012 F04F 0100       MOV              V,#FALSE
   53 00000016 F04F 0200       MOV              CONT1,#FALSE
   54 0000001A F04F 0300       MOV              RELOJOUT,#FALSE
   55 0000001E F04F 0400       MOV              AMARILLO,#FALSE
   56 00000022 F04F 0500       MOV              FLUJOHORIZONTAL,#FALSE
   57 00000026         
   58 00000026         ;Se establecen los valores iniciales de los outputs en m
                       emoria  
   59 00000026 F04F 0601       MOV              R6,#TRUE
   60 0000002A F04F 0700       MOV              R7,#FALSE
   61 0000002E F04F 5800       LDR              R8,=SHV
   62 00000032 F8C8 7000       STR              R7,[R8]
   63 00000036 F8DF 8178       LDR              R8,=SHA
   64 0000003A F8C8 7000       STR              R7,[R8]
   65 0000003E F8DF 8174       LDR              R8,=SHR
   66 00000042 F8C8 6000       STR              R6,[R8]
   67 00000046 F8DF 8170       LDR              R8,=SPHV
   68 0000004A F8C8 6000       STR              R6,[R8]
   69 0000004E F8DF 816C       LDR              R8,=SPHR
   70 00000052 F8C8 7000       STR              R7,[R8]
   71 00000056 F8DF 8168       LDR              R8,=SVV
   72 0000005A F8C8 6000       STR              R6,[R8]
   73 0000005E F8DF 8164       LDR              R8,=SVA
   74 00000062 F8C8 7000       STR              R7,[R8]
   75 00000066 F8DF 8160       LDR              R8,=SVR
   76 0000006A F8C8 7000       STR              R7,[R8]
   77 0000006E F8DF 815C       LDR              R8,=SPVV
   78 00000072 F8C8 7000       STR              R7,[R8]
   79 00000076 F8DF 8158       LDR              R8,=SPVR



ARM Macro Assembler    Page 3 


   80 0000007A F8C8 6000       STR              R6,[R8]
   81 0000007E 4770            BX               LR          ;Se sale de la subr
                                                            utina y regresa al 
                                                            flujo principal
   82 00000080         
   83 00000080         ;Subrutina que se encarga de cambiar el valor de la vari
                       able reloj out de acuerdo a la ecuación diseñada
   84 00000080         
   85 00000080 F102 0201 
                       CRO     ADD              CONT1,CONT1,#1
   86 00000084 2A03            CMP              CONT1,#3    ; Debería comparars
                                                            e con 64000 de acue
                                                            rdo al pseudo códig
                                                            o, pero de momento 
                                                            dejarlo en 3 por la
                                                            s pruebas
   87 00000086 BF0C            ITE              EQ          ; Se verifica la co
                                                            ndición del IF
   88 00000088 2301            MOVEQ            RELOJOUT,#1 ; Se ejecuta el THE
                                                            N (Es decir cuando 
                                                            se cumple la condic
                                                            ión del IF)
   89 0000008A         ;Comienzo del ELSE
   90 0000008A F081 0601       EORNE            R6,V,#1     ; NOT del LSB de V 
                                                            mediante un XOR
   91 0000008E BF1F EA06 
              0705             ANDNE            R7,R6,FLUJOHORIZONTAL
   92 00000094 EA00 0806       ANDNE            R8,H,R6
   93 00000098 EA00 0905       ANDNE            R9,H,FLUJOHORIZONTAL
   94 0000009C EA47 0A08       ORRNE            R10,R7,R8
   95 000000A0 BF1C EA4A 
              0B09             ORRNE            R11,R10,R9  ;En R11 se almacena
                                                             el resultado de la
                                                             ecuación
   96 000000A6 EA85 030B       EORNE            RELOJOUT,FLUJOHORIZONTAL,R11 ; 
                                                            Se aplica un XOR en
                                                            tre FLUJOHORIZONTAL
                                                             Y R11, y se almace
                                                            na en RELOJOUT
   97 000000AA         ;Fin del ELSE
   98 000000AA 4770            BX               LR
   99 000000AC         
  100 000000AC         ;Subrutina que se encarga de verificar la condición de r
                       eloj out
  101 000000AC         
  102 000000AC 2B01    IRO     CMP              RELOJOUT,#1
  103 000000AE BF08            IT               EQ          ; Se verifica el IF
                                                             Reloj out == 1
  104 000000B0 E000            BEQ              CDO         ; Se hace un Salto 
                                                            en caso de que la c
                                                            ondición se cumpla 
                                                            al branch CDO = Cam
                                                            bio De Outputs
  105 000000B2 4770            BX               LR          ; Si la condición n
                                                            o se cumple se regr
                                                            esa al ciclo infini
                                                            to
  106 000000B4         
  107 000000B4         ;Subrutina que se encarga de cambiar los valores de algu



ARM Macro Assembler    Page 4 


                       nos outputs dependiendo del valor de Flujo Horizontal
  108 000000B4         ;Para esta subrutina R6 representa a la variable interna
                        cont2
  109 000000B4         
  110 000000B4 F04F 0605 
                       CDO     MOV              R6,#5       ; Aquí se debería a
                                                            lmacenar 12000 pero
                                                             dejarlo así de mom
                                                            ento para las prueb
                                                            as
  111 000000B8 F04F 0401       MOV              AMARILLO,#1
  112 000000BC F04F 0300       MOV              RELOJOUT,#0
  113 000000C0 F04F 0701       MOV              R7,#TRUE
  114 000000C4 F04F 0800       MOV              R8,#FALSE
  115 000000C8 F04F 5900       LDR              R9,=SHV
  116 000000CC F8DF A0E0       LDR              R10,=SHA
  117 000000D0 F8DF B0EC       LDR              R11,=SVV
  118 000000D4 F8DF C0EC       LDR              R12,=SVA
  119 000000D8 2D01            CMP              FLUJOHORIZONTAL,#1
  120 000000DA BF06            ITTE             EQ
  121 000000DC F8C9 8000       STREQ            R8,[R9]
  122 000000E0 F8CA 7000       STREQ            R7,[R10]
  123 000000E4 F8CB 8000       STRNE            R8,[R11]
  124 000000E8 BF18 F8CC 
              7000             STRNE            R7,[R12]
  125 000000EE F000 F800       BL               L2          ;Branch L2 = Loop 2
                                                            
  126 000000F2         
  127 000000F2         ;Subrutina que ejecuta el segundo ciclo
  128 000000F2         
  129 000000F2 B116    L2      CBZ              R6,L20      ; Branch L20 = Loop
                                                             2 Out, básicamente
                                                             lo saca del loop c
                                                            uando cont2 sea cer
                                                            o
  130 000000F4 F1A6 0601       SUB              R6,R6,#1
  131 000000F8 E7FB            B                L2
  132 000000FA         
  133 000000FA         
  134 000000FA         ;Subrutina después del segundo ciclo, que verifica el nu
                       evo valor de Flujo Horizontal
  135 000000FA         
  136 000000FA F04F 0200 
                       L20     MOV              CONT1,#0
  137 000000FE F04F 0400       MOV              AMARILLO,#0
  138 00000102 F085 0501       EOR              FLUJOHORIZONTAL,FLUJOHORIZONTAL
,#1 
                                                            ;Se hace el NOT med
                                                            iante un XOR entre 
                                                            1 y el LSB de FLUJO
                                                            HORIZONTAL
  139 00000106 B34D            CBZ              FLUJOHORIZONTAL,CFO ;Branch CFO
                                                             = Cambio final de 
                                                            Outputs
  140 00000108         ;Comienzo del IF
  141 00000108 F04F 5900       LDR              R9,=SHV
  142 0000010C F8C9 7000       STR              R7,[R9]
  143 00000110 F8DF 909C       LDR              R9,=SHA
  144 00000114 F8C9 8000       STR              R8,[R9]



ARM Macro Assembler    Page 5 


  145 00000118 F8DF 9098       LDR              R9,=SHR
  146 0000011C F8C9 8000       STR              R8,[R9]
  147 00000120 F8DF 9094       LDR              R9,=SPHV
  148 00000124 F8C9 8000       STR              R8,[R9]
  149 00000128 F8DF 9090       LDR              R9,=SPHR
  150 0000012C F8C9 7000       STR              R7,[R9]
  151 00000130 F8DF 908C       LDR              R9,=SVV
  152 00000134 F8C9 8000       STR              R8,[R9]
  153 00000138 F8DF 9088       LDR              R9,=SVA
  154 0000013C F8C9 8000       STR              R8,[R9]
  155 00000140 F8DF 9084       LDR              R9,=SVR
  156 00000144 F8C9 7000       STR              R7,[R9]
  157 00000148 F8DF 9080       LDR              R9,=SPVV
  158 0000014C F8C9 7000       STR              R7,[R9]
  159 00000150 F8DF 907C       LDR              R9,=SPVR
  160 00000154 F8C9 8000       STR              R8,[R9]
  161 00000158 F7FF FF54       BL               INF
  162 0000015C         
  163 0000015C         
  164 0000015C         ;Subrutina que cambia los outputs cuando Flujo Horizonta
                       l == 0, Entra al ELSE
  165 0000015C         
  166 0000015C         ;Comienzo del Else
  167 0000015C F04F 5900 
                       CFO     LDR              R9,=SHV
  168 00000160 F8C9 8000       STR              R8,[R9]
  169 00000164 F8DF 9048       LDR              R9,=SHA
  170 00000168 F8C9 8000       STR              R8,[R9]
  171 0000016C F8DF 9044       LDR              R9,=SHR
  172 00000170 F8C9 7000       STR              R7,[R9]
  173 00000174 F8DF 9040       LDR              R9,=SPHV
  174 00000178 F8C9 7000       STR              R7,[R9]
  175 0000017C F8DF 903C       LDR              R9,=SPHR
  176 00000180 F8C9 8000       STR              R8,[R9]
  177 00000184 F8DF 9038       LDR              R9,=SVV
  178 00000188 F8C9 7000       STR              R7,[R9]
  179 0000018C F8DF 9034       LDR              R9,=SVA
  180 00000190 F8C9 8000       STR              R8,[R9]
  181 00000194 F8DF 9030       LDR              R9,=SVR
  182 00000198 F8C9 8000       STR              R8,[R9]
  183 0000019C F8DF 902C       LDR              R9,=SPVV
  184 000001A0 F8C9 8000       STR              R8,[R9]
  185 000001A4 F8DF 9028       LDR              R9,=SPVR
  186 000001A8 F8C9 7000       STR              R7,[R9]
  187 000001AC F7FF FF2A       BL               INF
  188 000001B0         
  189 000001B0                 END
              20000004 
              20000008 
              2000000C 
              20000010 
              20000014 
              20000018 
              2000001C 
              20000020 
              20000024 
Command Line: --debug --xref --diag_suppress=9931 --cpu=Cortex-M3 --apcs=interw
ork --depend=.\objects\main.d -o.\objects\main.o -I.\RTE\_Cortex_M3 -IC:\Users\
User\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\CMSIS\Core\Include -IC:\Users\User



ARM Macro Assembler    Page 6 


\AppData\Local\Arm\Packs\ARM\CMSIS\5.7.0\Device\ARM\ARMCM3\Include --predefine=
"__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="__UVISION_VERSION 
SETA 529" --predefine="_RTE_ SETA 1" --predefine="ARMCM3 SETA 1" --list=.\listi
ngs\main.lst main.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CDO 000000B4

Symbol: CDO
   Definitions
      At line 110 in file main.s
   Uses
      At line 104 in file main.s
Comment: CDO used once
CFO 0000015C

Symbol: CFO
   Definitions
      At line 167 in file main.s
   Uses
      At line 139 in file main.s
Comment: CFO used once
CI 0000000E

Symbol: CI
   Definitions
      At line 51 in file main.s
   Uses
      At line 44 in file main.s
Comment: CI used once
CRO 00000080

Symbol: CRO
   Definitions
      At line 85 in file main.s
   Uses
      At line 45 in file main.s
Comment: CRO used once
INF 00000004

Symbol: INF
   Definitions
      At line 45 in file main.s
   Uses
      At line 47 in file main.s
      At line 161 in file main.s
      At line 187 in file main.s

IRO 000000AC

Symbol: IRO
   Definitions
      At line 102 in file main.s
   Uses
      At line 46 in file main.s
Comment: IRO used once
L2 000000F2

Symbol: L2
   Definitions
      At line 129 in file main.s
   Uses
      At line 125 in file main.s
      At line 131 in file main.s




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

L20 000000FA

Symbol: L20
   Definitions
      At line 136 in file main.s
   Uses
      At line 129 in file main.s
Comment: L20 used once
Main 00000000

Symbol: Main
   Definitions
      At line 38 in file main.s
   Uses
      None
Comment: Main unused
__main 00000000

Symbol: __main
   Definitions
      At line 42 in file main.s
   Uses
      At line 40 in file main.s
Comment: __main used once
10 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FALSE 00000000

Symbol: FALSE
   Definitions
      At line 16 in file main.s
   Uses
      At line 51 in file main.s
      At line 52 in file main.s
      At line 53 in file main.s
      At line 54 in file main.s
      At line 55 in file main.s
      At line 56 in file main.s
      At line 60 in file main.s
      At line 114 in file main.s

SHA 20000004

Symbol: SHA
   Definitions
      At line 24 in file main.s
   Uses
      At line 63 in file main.s
      At line 116 in file main.s
      At line 143 in file main.s
      At line 169 in file main.s

SHR 20000008

Symbol: SHR
   Definitions
      At line 25 in file main.s
   Uses
      At line 65 in file main.s
      At line 145 in file main.s
      At line 171 in file main.s

SHV 20000000

Symbol: SHV
   Definitions
      At line 23 in file main.s
   Uses
      At line 61 in file main.s
      At line 115 in file main.s
      At line 141 in file main.s
      At line 167 in file main.s

SPHR 20000010

Symbol: SPHR
   Definitions
      At line 27 in file main.s
   Uses
      At line 69 in file main.s
      At line 149 in file main.s
      At line 175 in file main.s

SPHV 2000000C




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

Symbol: SPHV
   Definitions
      At line 26 in file main.s
   Uses
      At line 67 in file main.s
      At line 147 in file main.s
      At line 173 in file main.s

SPVR 20000024

Symbol: SPVR
   Definitions
      At line 32 in file main.s
   Uses
      At line 79 in file main.s
      At line 159 in file main.s
      At line 185 in file main.s

SPVV 20000020

Symbol: SPVV
   Definitions
      At line 31 in file main.s
   Uses
      At line 77 in file main.s
      At line 157 in file main.s
      At line 183 in file main.s

SVA 20000018

Symbol: SVA
   Definitions
      At line 29 in file main.s
   Uses
      At line 73 in file main.s
      At line 118 in file main.s
      At line 153 in file main.s
      At line 179 in file main.s

SVR 2000001C

Symbol: SVR
   Definitions
      At line 30 in file main.s
   Uses
      At line 75 in file main.s
      At line 155 in file main.s
      At line 181 in file main.s

SVV 20000014

Symbol: SVV
   Definitions
      At line 28 in file main.s
   Uses
      At line 71 in file main.s
      At line 117 in file main.s
      At line 151 in file main.s
      At line 177 in file main.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Absolute symbols


TRUE 00000001

Symbol: TRUE
   Definitions
      At line 15 in file main.s
   Uses
      At line 59 in file main.s
      At line 113 in file main.s

12 symbols
365 symbols in table
